// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesforceAPI.Data;

#nullable disable

namespace SalesforceAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240527223405_addtables")]
    partial class addtables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesforceAPI.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttributesId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAgency")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCMHSP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSite")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int?>("ShippingAddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributesId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SalesforceAPI.Models.AccountAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountAttributes");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ClientInfo", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<byte?>("ActiveInd")
                        .HasColumnType("tinyint");

                    b.Property<string>("ClientCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClientGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CredPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DBAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanelSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentClientId")
                        .HasColumnType("int");

                    b.Property<byte?>("Selectable")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("SignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("ClientInfos");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ClientProviderInfo", b =>
                {
                    b.Property<int>("ClientProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientProviderId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("ClientProviderId");

                    b.ToTable("ClientProviderInfos");
                });

            modelBuilder.Entity("SalesforceAPI.Models.CredentialingContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactPersonRole")
                        .HasColumnType("int");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PrimaryContact")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CredentialingContacts");
                });

            modelBuilder.Entity("SalesforceAPI.Models.DirectService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCertification")
                        .HasColumnType("bit");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DirectServices");
                });

            modelBuilder.Entity("SalesforceAPI.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CollegeUniversityProgramAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeUniversityProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("SalesforceAPI.Models.HospitalAffiliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryofMembership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateofAffiliation")
                        .HasColumnType("datetime2");

                    b.Property<string>("HospitalAffiliationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalAffiliationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateofAffiliation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HospitalAffiliations");
                });

            modelBuilder.Entity("SalesforceAPI.Models.PostGraduateMedicalTraining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MedicalTrainingHospitalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalTrainingHospitalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MedicalTrainingType")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Specialty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrainingEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TrainingStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PostGraduateMedicalTrainings");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ProviderKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CredentialingProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncompassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PractitionerGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProviderKeys");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ServiceLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccomodationsAccessibility")
                        .HasColumnType("int");

                    b.Property<string>("AccomodationsAccessibilityOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FacilityLicenseExpirationifapplicab")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityLicenseNumberifapplicable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityLicenseStatusifapplicable")
                        .HasColumnType("int");

                    b.Property<bool>("FacilityLicenseifapplicable")
                        .HasColumnType("bit");

                    b.Property<string>("HoursofOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LicensedFacility")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceLocations");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ServiceLocationLicense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceLicenseExpirationifapplicabl")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceLicenseNumberifapplicable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceLicenseStatusifapplicable")
                        .HasColumnType("int");

                    b.Property<string>("ServiceLocations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceLocationLicenses");
                });

            modelBuilder.Entity("SalesforceAPI.Models.ShippingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("geocodeAccuracy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("latitude")
                        .HasColumnType("float");

                    b.Property<double?>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("postalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShippingAddress");
                });

            modelBuilder.Entity("SalesforceAPI.Models.Account", b =>
                {
                    b.HasOne("SalesforceAPI.Models.AccountAttributes", "Attributes")
                        .WithMany()
                        .HasForeignKey("AttributesId");

                    b.HasOne("SalesforceAPI.Models.ShippingAddress", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId");

                    b.Navigation("Attributes");

                    b.Navigation("ShippingAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
